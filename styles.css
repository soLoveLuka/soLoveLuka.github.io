/* Reset default styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'VCR OSD Mono', monospace;
}

/* Body with modern, simplistic, spacey background */
body {
    background: linear-gradient(rgba(0, 0, 20, 0.8), rgba(0, 0, 20, 0.8)), url('https://images.unsplash.com/photo-1465101162946-4377e57745c3?q=80&w=1974&auto=format&fit=crop') no-repeat center center fixed;
    background-size: cover;
    background-color: #1a1a3d; /* Lighter fallback color: dark blue-purple */
    color: #fff;
    overflow-x: hidden;
    position: relative;
    perspective: 1000px; /* Adds 3D perspective to child elements */
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* Create a grid of wireframe cubes with connected edges */
    background: 
        /* Front vertical edges */
        repeating-linear-gradient(
            90deg,
            transparent 0px,
            transparent 30px,
            rgba(0, 247, 255, 0.1) 30px, /* Cyan edge */
            rgba(0, 247, 255, 0.1) 31px,
            transparent 31px,
            transparent 60px
        ),
        /* Front horizontal edges */
        repeating-linear-gradient(
            0deg,
            transparent 0px,
            transparent 30px,
            rgba(0, 247, 255, 0.1) 30px,
            rgba(0, 247, 255, 0.1) 31px,
            transparent 31px,
            transparent 60px
        ),
        /* Back vertical edges (shifted to simulate depth) */
        repeating-linear-gradient(
            90deg,
            transparent 0px,
            transparent 15px,
            rgba(0, 247, 255, 0.1) 15px,
            rgba(0, 247, 255, 0.1) 16px,
            transparent 16px,
            transparent 45px
        ),
        /* Back horizontal edges (shifted to simulate depth) */
        repeating-linear-gradient(
            0deg,
            transparent 0px,
            transparent 15px,
            rgba(0, 247, 255, 0.1) 15px,
            rgba(0, 247, 255, 0.1) 16px,
            transparent 16px,
            transparent 45px
        );
    background-size: 60px 60px; /* Size of each cube */
    background-position: 0 0, 0 0, 15px 15px, 15px 15px; /* Shift back edges for depth */
    z-index: -1;
    pointer-events: none;
    transform: rotateX(20deg) rotateY(20deg); /* 3D rotation for perspective */
    animation: float 10s infinite ease-in-out; /* Floating animation */
}

body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* Add connecting lines for the cube sides */
    background: 
        /* Diagonal lines (front-top to back-bottom) */
        repeating-linear-gradient(
            45deg,
            transparent 0px,
            transparent 21px,
            rgba(0, 247, 255, 0.1) 21px,
            rgba(0, 247, 255, 0.1) 22px,
            transparent 22px,
            transparent 43px
        ),
        /* Diagonal lines (front-bottom to back-top) */
        repeating-linear-gradient(
            -45deg,
            transparent 0px,
            transparent 21px,
            rgba(0, 247, 255, 0.1) 21px,
            rgba(0, 247, 255, 0.1) 22px,
            transparent 22px,
            transparent 43px
        );
    background-size: 60px 60px;
    background-position: 0 0;
    z-index: -1;
    pointer-events: none;
    transform: rotateX(20deg) rotateY(20deg); /* Match the 3D rotation */
    filter: drop-shadow(0 0 5px rgba(0, 247, 255, 0.3)); /* Cyan glow */
    animation: float 10s infinite ease-in-out reverse; /* Reverse float for depth */
}


/* Floating animation */
@keyframes float {
    0% { transform: translate(0, 0) rotateX(30deg) rotateY(30deg); }
    50% { transform: translate(15px, 15px) rotateX(30deg) rotateY(30deg); }
    100% { transform: translate(0, 0) rotateX(30deg) rotateY(30deg); }
}

/* Rotation animation for complexity */
@keyframes rotate {
    0% { transform: rotateX(30deg) rotateY(30deg) rotateZ(0deg); }
    100% { transform: rotateX(30deg) rotateY(30deg) rotateZ(360deg); }
}

/* Retro Nav Bar */
.retro-nav {
    position: sticky;
    top: 0;
    background: rgba(0, 0, 0, 0.8);
    padding: 1rem;
    z-index: 100;
    border-bottom: 2px solid #00f7ff;
    box-shadow: 0 0 10px #00f7ff;
}

.retro-nav ul {
    list-style: none;
    display: flex;
    justify-content: center;
    gap: 2rem;
}

.retro-nav a {
    color: #ff00ff;
    text-decoration: none;
    font-size: 1.2rem;
    text-transform: uppercase;
    transition: color 0.3s;
}

.retro-nav a:hover {
    color: #00f7ff;
}

/* Hero Section */
.hero {
    min-height: 100vh; /* Already set, but ensuring consistency */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    position: relative;
}

.hero h1 {
    font-family: 'Press Start 2P', cursive;
    font-size: 4rem;
    margin-bottom: 1rem;
}

.hero h2 {
    font-size: 2rem;
    color: #00f7ff;
    margin-bottom: 2rem;
}

/* Glitch Effect for Title */
.glitch {
    position: relative;
    color: #fff;
    animation: glitch 1s linear infinite;
}

.glitch::before,
.glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.glitch::before {
    color: #ff00ff;
    animation: glitch-top 0.5s linear infinite;
    clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);
}

.glitch::after {
    color: #00f7ff;
    animation: glitch-bottom 0.7s linear infinite;
    clip-path: polygon(0 67%, 100% 67%, 100% 100%, 0 100%);
}

@keyframes glitch {
    2%, 64% { transform: translate(2px, 0) skew(0deg); }
    4%, 60% { transform: translate(-2px, 0) skew(0deg); }
    62% { transform: translate(0, 0) skew(5deg); }
}

@keyframes glitch-top {
    2%, 64% { transform: translate(2px, -2px); }
    4%, 60% { transform: translate(-2px, 2px); }
    62% { transform: translate(13px, -1px) skew(-13deg); }
}

@keyframes glitch-bottom {
    2%, 64% { transform: translate(-2px, 0); }
    4%, 60% { transform: translate(2px, 0); }
    62% { transform: translate(-11px, 1px) skew(21deg); }
}

/* Sound Wave Animation */
.sound-wave {
    width: 300px;
    height: 50px;
    background: linear-gradient(90deg, #ff00ff, #00f7ff);
    animation: wave 2s infinite linear;
    margin-bottom: 2rem;
}

@keyframes wave {
    0% { transform: scaleX(1); }
    50% { transform: scaleX(1.2); }
    100% { transform: scaleX(1); }
}

/* Neon Button */
.neon-button {
    padding: 1rem 2rem;
    background: none;
    border: 2px solid #ff00ff;
    color: #ff00ff;
    font-size: 1.2rem;
    text-transform: uppercase;
    cursor: pointer;
    transition: all 0.3s;
    box-shadow: 0 0 10px #ff00ff;
}

.neon-button:hover {
    background: #ff00ff;
    color: #000;
    box-shadow: 0 0 20px #ff00ff;
}

/* Mixes Section */
.mixes {
    min-height: 100vh; /* Updated to match viewport height */
    padding: 5rem 2rem;
    background: rgba(0, 0, 0, 0.5);
}

.section-title {
    font-family: 'Press Start 2P', cursive;
    font-size: 2.5rem;
    text-align: center;
    margin-bottom: 3rem;
    color: #00f7ff;
    text-shadow: 0 0 10px #00f7ff;
}

.mix-grid {
    display: flex;
    justify-content: center;
    gap: 2rem;
    overflow-x: auto;
    padding-bottom: 1rem;
}

.mix-card {
    background: rgba(255, 255, 255, 0.1);
    border: 2px solid #ff00ff;
    padding: 1rem;
    text-align: center;
    transition: transform 0.3s;
    box-shadow: 0 0 10px #ff00ff;
}

.mix-card img {
    width: 300px;
    height: 300px;
    object-fit: cover;
}

.mix-card h3 {
    font-size: 1.5rem;
    color: #00f7ff;
    margin: 1rem 0;
}

.mix-card p {
    color: #fff;
}

.mix-card:hover {
    transform: scale(1.05);
}

/* Artist Section */
.artist {
    min-height: 100vh; /* Updated to match viewport height */
    padding: 5rem 2rem;
    background: rgba(0, 0, 0, 0.5);
}

.artist-content {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 3rem;
    flex-wrap: wrap;
}

.artist-content img {
    width: 400px;
    height: 400px;
    object-fit: cover;
    border: 2px solid #00f7ff;
    box-shadow: 0 0 10px #00f7ff;
}

.artist-bio {
    max-width: 500px;
}

.artist-bio p {
    font-size: 1.2rem;
    margin-bottom: 1rem;
}

.artist-bio audio {
    width: 100%;
    filter: hue-rotate(300deg);
}

/* Booking Section */
.booking {
    min-height: 100vh; /* Updated to match viewport height */
    padding: 5rem 2rem;
    background: rgba(0, 0, 0, 0.5);
    position: relative;
}
.booking-grid {
    width: 100%;
    height: 200px;
    background: linear-gradient(45deg, #ff00ff, #00f7ff);
    animation: pulse 5s infinite;
    margin-bottom: 2rem;
}

@keyframes pulse {
    0% { opacity: 0.5; }
    50% { opacity: 1; }
    100% { opacity: 0.5; }
}

.booking-form {
    max-width: 600px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.booking-form label {
    font-size: 1.2rem;
    color: #00f7ff;
}

.booking-form input,
.booking-form textarea {
    padding: 0.5rem;
    background: rgba(255, 255, 255, 0.1);
    border: 2px solid #ff00ff;
    color: #fff;
    font-family: 'VCR OSD Mono', monospace;
    font-size: 1rem;
}

.booking-form textarea {
    height: 150px;
    resize: none;
}

.trust-signal {
    text-align: center;
    color: #00f7ff;
    font-size: 1.2rem;
    text-shadow: 0 0 10px #00f7ff;
}

/* General Section Styles for Smooth Scrolling */
section {
    min-height: 100vh; /* Each section takes up the full viewport height */
    width: 100%;
    position: relative;
    transition: transform 0.8s ease-in-out, opacity 0.8s ease-in-out; /* Smooth transition for sliding and zooming */
    opacity: 1;
}

/* Class for sections that are out of view (above) */
.out-of-view-up {
    transform: translateY(-100%);
    opacity: 0;
}

/* Class for sections that are out of view (below) */
.out-of-view-down {
    transform: translateY(100%);
    opacity: 0;
}

/* Class for sections that are in view */
.in-view {
    transform: translateY(0);
    opacity: 1;
}

/* Class for zooming down effect when scrolling up */
.zoom-down {
    transform: translateY(100%) scale(0.95); /* Slight zoom effect */
    opacity: 0;
}

/* Mobile Responsiveness */
@media (max-width: 768px) {
    .retro-nav ul {
        flex-direction: column;
        gap: 1rem;
    }

    .retro-nav a {
        font-size: 1rem;
    }

    .hero h1 {
        font-size: 2.5rem;
    }

    .hero h2 {
        font-size: 1.5rem;
    }

    .sound-wave {
        width: 200px;
    }

    .mix-grid {
        flex-direction: column;
        align-items: center;
    }

    .mix-card {
        width: 80%;
    }

    .mix-card img {
        width: 100%;
        height: auto;
    }

    .artist-content {
        flex-direction: column;
        text-align: center;
    }

    .artist-content img {
        width: 80%;
        height: auto;
    }

    .booking-form {
        width: 90%;
    }
}
