```css
html {
    scroll-behavior: smooth;
}

/* Reset default styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'VCR OSD Mono', monospace;
}

/* Body with modern, simplistic, spacey background */
body {
    background: linear-gradient(rgba(0, 0, 20, 0.8), rgba(0, 0, 20, 0.8)), url('https://images.unsplash.com/photo-1465101162946-4377e57745c3?q=80&w=1974&auto=format&fit=crop') no-repeat center center fixed;
    background-size: cover;
    background-color: #1a1a3d;
    color: #fff;
    overflow-x: hidden;
    position: relative;
    transition: background 1s ease;
}

body.hero-bg {
    background: linear-gradient(rgba(0, 0, 20, 0.8), rgba(0, 0, 20, 0.8)), url('https://images.unsplash.com/photo-1465101162946-4377e57745c3?q=80&w=1974&auto=format&fit=crop') no-repeat center center fixed;
    background-size: cover; /* Ensure background covers even if content is short */
}

body.mixes-bg {
    background: linear-gradient(rgba(50, 0, 50, 0.8), rgba(50, 0, 50, 0.8)), url('https://images.unsplash.com/photo-1465101162946-4377e57745c3?q=80&w=1974&auto=format&fit=crop') no-repeat center center fixed;
    background-size: cover;
}

body.artist-bg {
    background: linear-gradient(rgba(0, 50, 50, 0.8), rgba(0, 50, 50, 0.8)), url('https://images.unsplash.com/photo-1465101162946-4377e57745c3?q=80&w=1974&auto=format&fit=crop') no-repeat center center fixed;
    background-size: cover;
}

body.booking-bg {
    background: linear-gradient(rgba(50, 50, 0, 0.8), rgba(50, 50, 0, 0.8)), url('https://images.unsplash.com/photo-1465101162946-4377e57745c3?q=80&w=1974&auto=format&fit=crop') no-repeat center center fixed;
    background-size: cover;
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background:
        repeating-linear-gradient(
            90deg,
            transparent 0px,
            transparent 40px,
            rgba(0, 247, 255, 0.3) 40px,
            rgba(0, 247, 255, 0.3) 41px,
            transparent 41px,
            transparent 80px
        ),
        repeating-linear-gradient(
            0deg,
            transparent 0px,
            transparent 40px,
            rgba(0, 247, 255, 0.3) 40px,
            rgba(0, 247, 255, 0.3) 41px,
            transparent 41px,
            transparent 80px
        ),
        repeating-linear-gradient(
            90deg,
            transparent 0px,
            transparent 20px,
            rgba(0, 247, 255, 0.2) 20px,
            rgba(0, 247, 255, 0.2) 21px,
            transparent 21px,
            transparent 60px
        ),
        repeating-linear-gradient(
            0deg,
            transparent 0px,
            transparent 20px,
            rgba(0, 247, 255, 0.2) 20px,
            rgba(0, 247, 255, 0.2) 21px,
            transparent 21px,
            transparent 60px
        );
    background-size: 80px 80px;
    background-position: 0 0, 0 0, 20px 20px, 20px 20px;
    z-index: -1;
    pointer-events: none;
    animation: float 10s infinite ease-in-out;
}

body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background:
        repeating-linear-gradient(
            45deg,
            transparent 0px,
            transparent 28px,
            rgba(0, 247, 255, 0.3) 28px,
            rgba(0, 247, 255, 0.3) 29px,
            transparent 29px,
            transparent 57px
        ),
        repeating-linear-gradient(
            -45deg,
            transparent 0px,
            transparent 28px,
            rgba(0, 247, 255, 0.3) 28px,
            rgba(0, 247, 255, 0.3) 29px,
            transparent 29px,
            transparent 57px
        );
    background-size: 80px 80px;
    background-position: 0 0;
    z-index: -1;
    pointer-events: none;
    filter: drop-shadow(0 0 5px rgba(0, 247, 255, 0.5)) drop-shadow(0 0 10px rgba(0, 247, 255, 0.3));
    animation: float 10s infinite ease-in-out reverse;
}

/* Subtle floating animation */
@keyframes float {
    0% { transform: translate(0, 0); }
    50% { transform: translate(5px, 5px); }
    100% { transform: translate(0, 0); }
}

/* Preloader */
.preloader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #1a1a3d;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 2000;
    transition: opacity 0.5s ease, visibility 0s linear 0.5s; /* Added visibility */
    opacity: 1;
    visibility: visible;
    overflow: hidden;
}

.preloader.hidden {
    opacity: 0;
    visibility: hidden; /* Hide completely */
    pointer-events: none;
}

.preloader-text {
    font-family: 'Press Start 2P', cursive;
    font-size: 1.5rem;
    color: #00f7ff;
    text-shadow: 0 0 10px #00f7ff;
    display: flex;
    gap: 2px;
    transition: opacity 0.3s ease;
}

.preloader-char {
    display: inline-block;
    opacity: 1;
    transition: opacity 0.3s ease;
}

.preloader-char.wave {
    animation: waveform 1s infinite ease-in-out;
    animation-delay: calc(var(--char-index) * 0.1s);
}

@keyframes waveform {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-15px); }
}

/* Preloader Progress */
.preloader-progress {
    margin-top: 1rem;
    text-align: center;
}

.progress-bar {
    width: 100px;
    height: 5px;
    background: rgba(0, 247, 255, 0.2);
    border: 1px solid #00f7ff;
    border-radius: 3px;
    overflow: hidden;
    position: relative; /* For pseudo-element */
}

.progress-bar::after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 100%;
    background: #00f7ff;
    box-shadow: 0 0 10px #00f7ff;
    transition: width 4s linear; /* Matched JS duration */
}

.progress-bar.active::after {
    width: 100%;
}

.progress-text {
    display: block;
    margin-top: 0.5rem;
    font-family: 'Press Start 2P', cursive;
    font-size: 0.8rem;
    color: #00f7ff;
    text-shadow: 0 0 5px #00f7ff;
}

/* Section Transition Particles */
.section-particles {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 100;
    overflow: hidden; /* Prevent particles appearing outside bounds */
}

.section-particle {
    position: absolute;
    width: 5px;
    height: 5px;
    background: #00f7ff;
    box-shadow: 0 0 5px #00f7ff;
    opacity: 0;
    border-radius: 50%; /* Make particles round */
    transition: opacity 0.5s ease, transform 0.8s ease-out; /* Smoother transform */
}

.section-particle.active {
    opacity: 1;
}

/* Retro Nav Bar */
.retro-nav {
    position: fixed;
    top: 0;
    width: 100%;
    background: rgba(0, 0, 20, 0.8);
    z-index: 1000;
    transition: background 0.3s ease, opacity 0.3s ease; /* Added opacity transition */
    opacity: 1; /* Default */
}

.retro-nav ul {
    display: flex;
    justify-content: center;
    list-style: none;
    padding: 1rem 0;
    margin: 0;
    flex-wrap: wrap;
    max-width: 100%;
}

.retro-nav li {
    margin: 0 1.5rem;
}

.retro-nav a {
    font-family: 'Press Start 2P', cursive;
    font-size: 1rem;
    color: #00f7ff;
    text-decoration: none;
    text-shadow: 0 0 10px #00f7ff;
    opacity: 0.7;
    transition: opacity 0.3s ease, color 0.3s ease, text-shadow 0.3s ease; /* Added text-shadow transition */
}

.retro-nav a:hover,
.retro-nav a:focus { /* Added focus style */
    color: #ff00ff;
    text-shadow: 0 0 10px #ff00ff, 0 0 15px #ff00ff; /* Enhanced hover shadow */
    opacity: 1;
    outline: none; /* Remove default focus outline */
}

.retro-nav.scrolled a {
    opacity: 1;
}

/* General Section Styles for Smooth Scrolling */
section {
    min-height: 100vh; /* Ensure sections take at least full viewport height */
    width: 100%;
    position: relative; /* Needed for absolute positioning inside if any */
    display: flex; /* Use flexbox for easier centering */
    flex-direction: column; /* Stack content vertically */
    justify-content: center; /* Center content vertically */
    align-items: center; /* Center content horizontally */
    padding: 6rem 2rem 2rem 2rem; /* Add padding (top accounts for fixed nav) */
    transition: transform 0.8s cubic-bezier(0.23, 1, 0.32, 1), opacity 0.7s cubic-bezier(0.23, 1, 0.32, 1); /* Adjusted timing */
    opacity: 0; /* Start hidden */
    transform: translateY(50px); /* Start slightly down */
    overflow: hidden; /* Prevent content overflow issues */
}

/* Classes managed by JS for section transitions */
.out-of-view-up {
    transform: translateY(-100%) scale(0.95); /* Adjusted transform */
    opacity: 0;
    pointer-events: none; /* Prevent interaction when out of view */
}

.out-of-view-down {
    transform: translateY(100%) scale(0.95); /* Adjusted transform */
    opacity: 0;
    pointer-events: none;
}

.in-view {
    transform: translateY(0) scale(1);
    opacity: 1;
    pointer-events: auto; /* Allow interaction */
}

/* Removed .zoom-down as it wasn't being used consistently and simplifies logic */

/* Hero Section */
.hero {
    text-align: center;
    /* Padding is handled by general section style */
}

.hero h1 {
    font-family: 'Press Start 2P', cursive;
    font-size: 4rem;
    margin-bottom: 1rem;
}

.hero h2 {
    font-size: 2rem;
    color: #00f7ff;
    margin-bottom: 2rem;
}

/* Glitch Effect for Title */
.glitch {
    position: relative;
    color: #fff;
    animation: glitch 1s linear infinite;
}

.glitch::before,
.glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden; /* Prevent glitch text spilling */
}

.glitch::before {
    color: #ff00ff;
    animation: glitch-top 0.5s linear infinite;
    clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);
}

.glitch::after {
    color: #00f7ff;
    animation: glitch-bottom 0.7s linear infinite;
    clip-path: polygon(0 67%, 100% 67%, 100% 100%, 0 100%);
}

@keyframes glitch {
    2%, 64% { transform: translate(2px, 0) skew(0deg); }
    4%, 60% { transform: translate(-2px, 0) skew(0deg); }
    62% { transform: translate(0, 0) skew(5deg); }
}

@keyframes glitch-top {
    2%, 64% { transform: translate(2px, -2px); }
    4%, 60% { transform: translate(-2px, 2px); }
    62% { transform: translate(13px, -1px) skew(-13deg); }
}

@keyframes glitch-bottom {
    2%, 64% { transform: translate(-2px, 0); }
    4%, 60% { transform: translate(2px, 0); }
    62% { transform: translate(-10px, 1px) skew(10deg); }
}

/* Sound Wave Visualizer */
.sound-wave-container {
    display: flex;
    justify-content: center;
    align-items: flex-end;
    gap: 5px;
    margin-bottom: 2rem;
    width: 300px;
    height: 100px;
    touch-action: none; /* Prevent scrolling while interacting */
    user-select: none; /* Prevent text selection */
}

.sound-bar {
    width: 10px;
    height: 10px; /* Initial height */
    background: #00f7ff;
    box-shadow: 0 0 10px #00f7ff;
    transition: height 0.15s ease-out; /* Slightly faster, ease-out */
    border-radius: 2px 2px 0 0; /* Slight rounding */
}

/* Neon Button */
.neon-button {
    font-family: 'Press Start 2P', cursive;
    font-size: 1rem;
    padding: 0.8rem 1.5rem;
    background: transparent;
    border: 2px solid #ff00ff;
    color: #ff00ff;
    text-shadow: 0 0 10px #ff00ff;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative; /* For potential pseudo-elements */
    overflow: hidden; /* For potential effects */
}

.neon-button:hover,
.neon-button:focus { /* Added focus style */
    background: rgba(255, 0, 255, 0.2);
    box-shadow: 0 0 15px #ff00ff, 0 0 25px #ff00ff; /* Enhanced glow */
    color: #fff; /* Brighter text on hover */
    outline: none;
}

/* Mixes Section */
.mixes {
    /* Padding is handled by general section style */
    text-align: center;
}

.section-title {
    font-family: 'Press Start 2P', cursive;
    font-size: 2.5rem;
    color: #00f7ff;
    text-shadow: 0 0 10px #00f7ff, 0 0 15px rgba(0, 247, 255, 0.5); /* Slightly enhanced shadow */
    margin-bottom: 3rem; /* Increased margin */
}

.mix-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: flex-start; /* Align items to the top */
    gap: 3rem; /* Increased gap */
    padding: 0 1rem;
    max-width: 1200px; /* Allow wider container */
    width: 100%;
}

.mix-grid {
    display: grid !important; /* Override potential conflicts */
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); /* Slightly larger min size */
    gap: 2rem;
    flex: 2; /* Allow grid to take more space */
    min-width: 300px; /* Ensure grid has some minimum width */
    opacity: 0;
    transform: translateY(50px);
    transition: opacity 1s cubic-bezier(0.23, 1, 0.32, 1) 0.2s, transform 1s cubic-bezier(0.23, 1, 0.32, 1) 0.2s; /* Added delay */
}

.mix-grid.active {
    opacity: 1;
    transform: translateY(0);
}

.mix-description {
    flex: 1; /* Allow description to take remaining space */
    max-width: 450px; /* Limit description width */
    min-width: 250px;
    text-align: left;
    opacity: 0;
    transform: translateY(50px);
    transition: opacity 1s cubic-bezier(0.23, 1, 0.32, 1) 0.4s, transform 1s cubic-bezier(0.23, 1, 0.32, 1) 0.4s; /* Added delay */
}

.mix-description.active {
    opacity: 1;
    transform: translateY(0);
}

.mix-description h3 {
    font-family: 'Press Start 2P', cursive;
    font-size: 1.5rem;
    color: #ff00ff;
    text-shadow: 0 0 10px #ff00ff;
    margin-bottom: 1rem;
}

.mix-description p {
    font-size: 1rem;
    line-height: 1.6;
}

/* Mix Card */
.mix-card {
    perspective: 1200px; /* Increased perspective */
    width: 100%;
    min-height: 320px; /* Slightly increased height */
    position: relative;
    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Added transition */
    border-radius: 10px; /* Add radius here too */
    /* Removed float animation - can be distracting */
}

.mix-card:hover {
    transform: scale(1.03); /* Slight scale on hover */
    box-shadow: 0 0 25px rgba(0, 247, 255, 0.7), 0 0 40px rgba(0, 247, 255, 0.4); /* Enhanced hover shadow */
}

.mix-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    min-height: 320px;
    transition: transform 0.8s cubic-bezier(0.68, -0.55, 0.27, 1.55); /* Slightly faster flip */
    transform-style: preserve-3d;
}

.mix-card.flipped .mix-card-inner {
    transform: rotateY(180deg);
}

.mix-card-front,
.mix-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    min-height: 320px;
    backface-visibility: hidden;
    display: flex;
    flex-direction: column;
    justify-content: flex-start; /* Align content to top */
    align-items: center;
    background: rgba(10, 10, 30, 0.85); /* Slightly darker, less transparent */
    border: 2px solid #00f7ff;
    border-radius: 10px;
    box-shadow: 0 0 15px rgba(0, 247, 255, 0.4);
    padding: 1.5rem; /* Increased padding */
    overflow: hidden; /* Hide overflow */
}

.mix-card-front {
    /* Background image removed, using img tag */
}

.mix-card-front img {
    width: 100%;
    height: 160px; /* Fixed height for consistency */
    object-fit: cover;
    border-radius: 5px;
    margin-bottom: 1rem;
    display: block;
    border: 1px solid rgba(0, 247, 255, 0.5); /* Subtle border */
}

.mix-card-front h3 {
    font-family: 'Press Start 2P', cursive;
    font-size: 1.2rem;
    color: #00f7ff;
    text-shadow: 0 0 10px #00f7ff;
    margin-bottom: 0.5rem;
    text-align: center;
}

.mix-card-front p {
    font-size: 0.9rem;
    color: #ccc; /* Lighter color for subtitle */
    text-align: center;
}

.mix-card-back {
    transform: rotateY(180deg);
    justify-content: center; /* Center audio player vertically */
}

.mix-audio {
    width: 100%;
    filter: contrast(1.1) brightness(1.1); /* Style the default controls slightly */
}

/* Artist Section */
.artist {
    /* Padding/opacity/transform handled by general section styles */
    text-align: center;
}

.artist-content {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: 3rem; /* Increased gap */
    max-width: 900px;
    margin: 0 auto;
    width: 100%;
}

.artist-content img {
    width: 280px; /* Slightly smaller */
    height: 280px;
    object-fit: cover;
    border-radius: 50%; /* Make image circular */
    border: 3px solid #ff00ff;
    box-shadow: 0 0 20px rgba(255, 0, 255, 0.5), 0 0 30px rgba(255, 0, 255, 0.3); /* Enhanced shadow */
    transition: transform 0.4s ease;
}

.artist-content img:hover {
    transform: scale(1.05) rotate(3deg); /* Add hover effect */
}

.artist-bio {
    max-width: 500px;
    text-align: left;
}

.artist-bio p {
    font-size: 1rem;
    line-height: 1.7; /* Increased line height */
    margin-bottom: 1.5rem; /* Increased margin */
    color: #eee; /* Lighter text */
}

.artist-audio {
    width: 100%;
    margin-top: 1rem; /* Add space above audio */
    filter: contrast(1.1) brightness(1.1);
}

/* Booking Section */
.booking {
    /* Padding/opacity/transform handled by general section styles */
    text-align: center;
    position: relative; /* Needed for neon grid positioning */
}

.booking-form {
    max-width: 600px;
    margin: 0 auto;
    position: relative; /* For flipper */
    z-index: 1; /* Above neon grid */
}

.form-flipper {
    position: relative;
    perspective: 1500px; /* Increased perspective */
    width: 100%;
    min-height: 500px; /* Increased height to accommodate fields */
    margin-bottom: 2rem; /* Space below form */
}

.form-front,
.form-back {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    transition: transform 1s cubic-bezier(0.68, -0.55, 0.27, 1.55); /* Adjusted timing */
    background: rgba(10, 10, 30, 0.85); /* Match card background */
    border: 2px solid #00f7ff;
    border-radius: 10px;
    padding: 2rem; /* Add padding */
    box-shadow: 0 0 15px rgba(0, 247, 255, 0.4);
}

.form-front {
    transform: rotateY(0deg);
    display: grid; /* Use grid for layout */
    grid-template-columns: 1fr 1fr; /* Two columns */
    gap: 1.5rem; /* Gap between fields */
    align-content: start; /* Align items to start vertically */
}

.form-back {
    transform: rotateY(180deg);
    display: flex;
    justify-content: center;
    align-items: center;
}

.form-flipper.flipped .form-front {
    transform: rotateY(-180deg);
}

.form-flipper.flipped .form-back {
    transform: rotateY(0deg);
}

.form-group {
    margin-bottom: 0; /* Remove bottom margin, use grid gap */
    /* Span full width if needed */
    /* grid-column: 1 / -1; */
}

/* Make specific fields span full width if desired */
.form-group[data-field="name"],
.form-group[data-field="email"] {
     grid-column: 1 / -1; /* Example: Make name/email full width */
}


.form-group.finish-group {
    grid-column: 1 / -1; /* Ensure finish button spans columns */
    display: none; /* Initially hidden */
    margin-top: 1rem; /* Space above finish button */
    justify-self: center; /* Center the button wrapper */
}

.form-group.finish-group.active {
    display: block;
}

.input-wrapper {
    position: relative;
    perspective: 1000px; /* Apply perspective here for flip effect */
    width: 100%;
    height: 50px; /* Set a fixed height */
}

.input-wrapper input,
.input-wrapper select,
.input-back {
    position: absolute; /* Position elements for flip */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding: 0.8rem;
    background: rgba(0, 0, 20, 0.7); /* Darker input background */
    border: 2px solid #00f7ff;
    border-radius: 5px;
    color: #fff;
    font-family: 'VCR OSD Mono', monospace;
    font-size: 1rem;
    transition: border-color 0.3s ease, box-shadow 0.3s ease, transform 0.8s cubic-bezier(0.68, -0.55, 0.27, 1.55); /* Flip transition */
    backface-visibility: hidden; /* Hide back during flip */
    transform-style: preserve-3d; /* Ensure children inherit 3D space */
}

.input-wrapper input,
.input-wrapper select {
    z-index: 2; /* Input/select above back */
    transform: rotateY(0deg); /* Start facing front */
}

.input-wrapper input:focus,
.input-wrapper select:focus {
    outline: none;
    border-color: #ff00ff;
    box-shadow: 0 0 10px #ff00ff;
}

.input-wrapper select {
    appearance: none;
    background: rgba(0, 0, 20, 0.7) url('data:image/svg+xml;utf8,<svg fill="%2300f7ff" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/></svg>') no-repeat right 0.75rem center;
    background-size: 1rem;
}

.input-label {
    position: absolute;
    top: 50%;
    left: 0.8rem;
    transform: translateY(-50%);
    color: #00f7ff;
    text-shadow: 0 0 5px #00f7ff;
    font-size: 1rem;
    pointer-events: none;
    transition: opacity 0.3s ease, transform 0.3s ease; /* Add transform transition */
    z-index: 3; /* Above input */
    opacity: 0.7; /* Slightly faded */
}

/* Move label up when input has value or focus */
.input-wrapper input:focus + .input-label,
.input-wrapper input:not(:placeholder-shown) + .input-label,
.input-wrapper select:focus + .input-label,
.input-wrapper select:valid + .input-label { /* Use :valid for select */
    transform: translateY(-160%) scale(0.8); /* Move up and shrink */
    opacity: 1;
    color: #ff00ff; /* Change color when active */
}

/* Hide label completely when flipped */
.input-wrapper.flipped .input-label {
    opacity: 0;
}

.input-back {
    display: flex;
    justify-content: center;
    align-items: center;
    transform: rotateY(180deg); /* Start flipped back */
    z-index: 1; /* Below input */
    cursor: pointer; /* Indicate it's clickable */
}

/* Flip Logic via JS adding 'flipped' class */
.input-wrapper.flipped input,
.input-wrapper.flipped select {
    transform: rotateY(-180deg); /* Flip input away */
    pointer-events: none; /* Disable input when flipped */
}

.input-wrapper.flipped .input-back {
    transform: rotateY(0deg); /* Flip back to front */
}

.checkmark {
    position: relative;
    display: inline-block;
    font-size: 2rem;
    color: #00ff00;
    text-shadow: 0 0 10px #00ff00;
    /* Removed cursor: pointer; - click handled by .input-back */
    transition: all 0.3s ease;
    transform: scale(0); /* Start hidden */
    opacity: 0;
}

.input-wrapper.flipped .checkmark {
    opacity: 1;
    transform: scale(1); /* Scale in */
    transition: transform 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55) 0.3s, opacity 0.3s ease 0.3s; /* Delayed appearance */
}


.checkmark.glowing {
    color: #00ff00;
    text-shadow: 0 0 10px #00ff00, 0 0 20px #00ff00, 0 0 30px #00ff00;
    animation: pulseCheck 1.5s infinite ease-in-out, floatTilt 3s infinite ease-in-out;
}

/* Checkmark animations remain the same */
@keyframes pulseCheck { ... }
@keyframes floatTilt { ... }
@keyframes fogPulse { ... }

.finish-button-wrapper {
    margin-top: 1rem;
    perspective: 1000px;
    display: flex; /* Use flex to center */
    justify-content: center;
}

.finish-button-inner {
    position: relative;
    width: 200px;
    height: 50px;
    transform-style: preserve-3d;
}

.finish-button-front {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: 'Press Start 2P', cursive;
    font-size: 1rem;
    text-transform: uppercase;
    cursor: pointer;
    border: 2px solid;
    border-radius: 5px;
    background: rgba(0, 0, 20, 0.8);
    border-color: #00f7ff;
    color: #00f7ff;
    text-shadow: 0 0 10px #00f7ff;
    transition: all 0.3s ease;
}

.finish-button-front:hover,
.finish-button-front:focus {
    background: rgba(0, 247, 255, 0.2);
    box-shadow: 0 0 20px #00f7ff;
    outline: none;
}

.book-now-wrapper {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.book-now-button {
    font-family: 'Press Start 2P', cursive;
    font-size: 1.2rem;
    padding: 1rem 2rem;
    background: transparent;
    border: 2px solid #ff00ff;
    color: #ff00ff;
    text-shadow: 0 0 10px #ff00ff;
    cursor: pointer;
    transition: all 0.3s ease;
}

.book-now-button:hover,
.book-now-button:focus {
    background: rgba(255, 0, 255, 0.2);
    box-shadow: 0 0 20px #ff00ff;
    color: #fff;
    outline: none;
}

/* Neon Grid Background */
.neon-grid {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background:
        repeating-linear-gradient(
            90deg,
            transparent 0px,
            transparent 20px,
            rgba(0, 247, 255, 0.2) 20px, /* Slightly less intense */
            rgba(0, 247, 255, 0.2) 21px,
            transparent 21px,
            transparent 40px
        ),
        repeating-linear-gradient(
            0deg,
            transparent 0px,
            transparent 20px,
            rgba(0, 247, 255, 0.2) 20px,
            rgba(0, 247, 255, 0.2) 21px,
            transparent 21px,
            transparent 40px
        );
    background-size: 40px 40px;
    opacity: 0;
    transition: opacity 0.8s ease; /* Slower fade in */
    z-index: 0; /* Behind form */
    pointer-events: none; /* Don't intercept clicks */
    border-radius: 10px; /* Match form border radius */
}

.neon-grid.active {
    opacity: 0.5; /* Don't make it fully opaque */
}

/* Back to Top Button */
.back-to-top {
    position: fixed;
    bottom: 20px;
    right: 20px;
    font-family: 'Press Start 2P', cursive;
    font-size: 0.8rem;
    padding: 0.5rem 1rem;
    background: rgba(0, 0, 20, 0.8);
    border: 2px solid #00f7ff;
    color: #00f7ff;
    text-decoration: none;
    text-shadow: 0 0 10px #00f7ff;
    opacity: 0;
    visibility: hidden; /* Use visibility for hiding */
    transition: opacity 0.3s ease, visibility 0s linear 0.3s;
    z-index: 1000;
    border-radius: 5px;
}

.back-to-top.visible {
    opacity: 1;
    visibility: visible;
    transition-delay: 0s;
}

.back-to-top:hover,
.back-to-top:focus {
    background: rgba(0, 247, 255, 0.2);
    box-shadow: 0 0 15px #00f7ff;
    outline: none;
}

/* 3D Retro Cube and Countdown Timer */
.retro-cube-container {
    position: fixed;
    bottom: 20px;
    left: 20px;
    z-index: 1000;
    opacity: 0;
    visibility: hidden; /* Use visibility */
    transition: opacity 0.5s ease, visibility 0s linear 0.5s;
}

.retro-cube-container.visible {
    opacity: 1;
    visibility: visible;
    transition-delay: 0s;
}

.retro-cube {
    width: 150px;
    height: 150px;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 1s ease;
    cursor: pointer; /* Indicate cube is interactive */
}

.cube-face {
    position: absolute;
    width: 150px;
    height: 150px;
    background: rgba(0, 0, 20, 0.85); /* Slightly darker */
    border: 2px solid #ff00ff;
    box-shadow: 0 0 15px rgba(255, 0, 255, 0.5); /* Adjusted shadow */
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 1rem;
    user-select: none; /* Prevent text selection */
}

.cube-text {
    font-family: 'Press Start 2P', cursive;
    font-size: 0.6rem;
    color: #ff00ff;
    text-shadow: 0 0 10px #ff00ff;
}

.cube-close {
    position: absolute;
    top: 5px;
    right: 5px;
    font-size: 1rem;
    color: #ff00ff;
    cursor: pointer;
    text-shadow: 0 0 5px #ff00ff;
    padding: 2px; /* Easier to click */
    transition: color 0.2s, text-shadow 0.2s;
}

.cube-close:hover {
    color: #00f7ff;
    text-shadow: 0 0 8px #00f7ff;
}

.face-front { transform: translateZ(75px); }
.face-back { transform: translateZ(-75px) rotateY(180deg); }
.face-left { transform: translateX(-75px) rotateY(-90deg); }
.face-right { transform: translateX(75px) rotateY(90deg); }
.face-top { transform: translateY(-75px) rotateX(90deg); }
.face-bottom { transform: translateY(75px) rotateX(-90deg); }

.retro-cube.interacted {
    animation: shake 0.5s ease;
}

@keyframes shake {
    0%, 100% { transform: rotateX(0deg) rotateY(0deg); } /* Use existing rotation */
    25% { transform: rotateX(10deg) rotateY(-10deg); }
    75% { transform: rotateX(-10deg) rotateY(10deg); }
}

.retro-cube.roll-to-timer {
    animation: roll 1s ease forwards;
}

@keyframes roll {
    0% { transform: rotateX(0deg) rotateY(0deg); opacity: 1; } /* Start from current rotation potentially */
    100% { transform: rotateX(720deg) rotateY(720deg) scale(0.1); opacity: 0; } /* Spin and shrink */
}

.countdown-timer {
    display: none; /* Hidden by default */
    font-family: 'Press Start 2P', cursive;
    font-size: 1.2rem;
    color: #00f7ff;
    text-shadow: 0 0 10px #00f7ff;
    margin-top: 1rem; /* Space when visible */
    background: rgba(0, 0, 20, 0.8); /* Add background */
    padding: 0.5rem 1rem;
    border: 1px solid #00f7ff;
    border-radius: 5px;
    transform: scale(0.8); /* Start small */
    opacity: 0;
    transition: transform 0.5s ease 0.5s, opacity 0.5s ease 0.5s; /* Delayed appearance */
}

.retro-cube-container.timer-mode .retro-cube {
    display: none; /* Hide cube when timer shows */
}

.retro-cube-container.timer-mode .countdown-timer {
    display: flex;
    align-items: center;
    gap: 3px; /* Adjusted gap */
    transform: scale(1); /* Scale to full size */
    opacity: 1;
}

.timer-digit {
    width: 20px;
    height: 30px;
    background: rgba(0, 0, 10, 0.9); /* Darker digit background */
    border: 1px solid #00f7ff;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    overflow: hidden;
    font-size: 1rem; /* Ensure text fits */
    line-height: 30px; /* Center text vertically */
    text-align: center;
    border-radius: 2px;
}

/* Flip animation - simplified using pseudo-elements */
.timer-digit::before,
.timer-digit::after {
    content: attr(data-value);
    position: absolute;
    left: 0;
    right: 0;
    background: rgba(0, 0, 10, 0.9);
    perspective: 300px;
    transition: transform 0.5s ease-in-out;
}

.timer-digit::before { /* Top half */
    top: 0;
    height: 50%;
    line-height: 30px;
    transform-origin: bottom;
    transform: rotateX(0);
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); /* Show top */
}

.timer-digit::after { /* Bottom half */
    bottom: 0;
    height: 50%;
    line-height: 0; /* Align text to top for bottom half */
    transform-origin: top;
    transform: rotateX(180deg); /* Start flipped */
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); /* Show bottom */
    color: #00d9e6; /* Slightly different shade for flip */
}

.timer-digit.flip::before {
    transform: rotateX(-180deg); /* Flip top half up */
}
.timer-digit.flip::after {
    transform: rotateX(0); /* Flip bottom half down */
}


.timer-colon {
    margin: 0 2px;
    color: #00f7ff;
    text-shadow: 0 0 5px #00f7ff;
    animation: blinkColon 1.5s infinite steps(1, end);
}

@keyframes blinkColon {
    50% { opacity: 0; }
}

.countdown-timer.expired {
    color: #ff00ff;
    text-shadow: 0 0 10px #ff00ff;
    animation: blinkExpired 1s infinite;
    border-color: #ff00ff;
}
.countdown-timer.expired .timer-digit,
.countdown-timer.expired .timer-colon {
    color: #ff00ff;
    border-color: #ff00ff;
    text-shadow: 0 0 10px #ff00ff;
}


@keyframes blinkExpired {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

/* Stickman Styles (Updated) */
.stickman-container {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* Container doesn't block */
    z-index: 500;
    overflow: hidden; /* Prevent stickman going completely off */
}

.stickman {
    position: absolute;
    width: 50px;
    height: 80px;
    /* Initial position set by JS */
    transition: transform 0.2s linear; /* Base transition for movement */
    will-change: transform; /* Performance hint */
    pointer-events: auto; /* Allow clicking stickman */
    cursor: help; /* Change cursor on hover */
}

.stickman-head {
    width: 20px;
    height: 20px;
    background: #fff;
    border-radius: 50%;
    position: absolute;
    top: 0;
    left: 15px; /* Center head */
    box-shadow: 0 0 5px #fff;
    transition: transform 0.3s ease; /* Smooth head movements */
}

.stickman-body {
    width: 4px;
    height: 30px;
    background: #fff;
    position: absolute;
    top: 20px; /* Connect below head */
    left: 23px; /* Center body */
    box-shadow: 0 0 5px #fff;
    transform-origin: center top; /* *** KEY FIX *** */
    transition: transform 0.3s ease; /* Smooth body movements */
}

.stickman-arm-left,
.stickman-arm-right,
.stickman-leg-left,
.stickman-leg-right {
    width: 4px;
    height: 25px; /* Slightly longer limbs */
    background: #fff;
    position: absolute;
    box-shadow: 0 0 5px #fff;
    border-radius: 2px; /* Rounded ends */
    transform-origin: center top; /* Attach limbs at top */
    transition: transform 0.3s ease; /* Smooth limb movements */
}

.stickman-arm-left {
    top: 25px; /* Attach to body */
    left: 23px; /* Start at center */
    transform: rotate(30deg) translateX(-4px); /* Default arm position */
}

.stickman-arm-right {
    top: 25px;
    left: 23px;
    transform: rotate(-30deg) translateX(4px); /* Default arm position */
}

.stickman-leg-left {
    top: 50px; /* Attach at bottom of body */
    left: 23px;
    transform: rotate(15deg) translateX(-2px); /* Default leg position */
}

.stickman-leg-right {
    top: 50px;
    left: 23px;
    transform: rotate(-15deg) translateX(2px); /* Default leg position */
}

.stickman-speech-bubble {
    position: absolute;
    top: -45px; /* Position above head */
    left: 50%; /* Center horizontally */
    transform: translateX(-50%); /* Precise centering */
    min-width: 80px; /* Minimum width */
    max-width: 150px; /* Maximum width */
    background: rgba(0, 0, 20, 0.9); /* More opaque */
    border: 2px solid #00f7ff;
    border-radius: 10px;
    padding: 8px 12px; /* More padding */
    opacity: 0;
    visibility: hidden; /* Use visibility */
    transition: opacity 0.3s ease, visibility 0s linear 0.3s, transform 0.3s ease;
    z-index: 10; /* Above stickman */
}

.stickman-speech-bubble.visible {
    opacity: 1;
    visibility: visible;
    transition-delay: 0s;
    transform: translateX(-50%) translateY(-5px); /* Slight pop-up */
}

.stickman-speech-bubble::after { /* Speech bubble tail */
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    border-width: 10px 8px 0; /* Adjusted size */
    border-style: solid;
    border-color: #00f7ff transparent transparent;
}

.stickman-speech-text {
    font-family: 'Press Start 2P', cursive;
    font-size: 0.6rem;
    color: #00f7ff;
    text-shadow: 0 0 5px #00f7ff;
    display: block; /* Ensure text wraps */
    text-align: center;
    line-height: 1.3;
}

/* Stickman Animations (Updated & New) */
.stickman.walking .stickman-arm-left { animation: swing-arm-left 0.5s infinite alternate ease-in-out; }
.stickman.walking .stickman-arm-right { animation: swing-arm-right 0.5s infinite alternate ease-in-out; }
.stickman.walking .stickman-leg-left { animation: swing-leg-left 0.5s infinite alternate ease-in-out; }
.stickman.walking .stickman-leg-right { animation: swing-leg-right 0.5s infinite alternate ease-in-out; }

@keyframes swing-arm-left {
    from { transform: rotate(40deg) translateX(-4px); }
    to { transform: rotate(-30deg) translateX(-4px); }
}
@keyframes swing-arm-right {
    from { transform: rotate(-40deg) translateX(4px); }
    to { transform: rotate(30deg) translateX(4px); }
}
@keyframes swing-leg-left {
    from { transform: rotate(25deg) translateX(-2px); }
    to { transform: rotate(-15deg) translateX(-2px); }
}
@keyframes swing-leg-right {
    from { transform: rotate(-25deg) translateX(2px); }
    to { transform: rotate(15deg) translateX(2px); }
}

.stickman.jumping { animation: jump 0.6s ease-out; }
@keyframes jump {
    0% { transform: translateY(0); }
    50% { transform: translateY(-40px); } /* Jump height */
    100% { transform: translateY(0); }
}
.stickman.jumping .stickman-leg-left { transform: rotate(-30deg) translateX(-2px); } /* Legs tuck */
.stickman.jumping .stickman-leg-right { transform: rotate(30deg) translateX(2px); }

/* Refined Laying */
.stickman.laying { animation: lay-down 0.5s ease forwards; }
@keyframes lay-down {
    to { transform: translateY(30px) rotate(90deg); } /* Move down slightly and rotate */
}
.stickman.laying .stickman-head { transform: rotate(-90deg); top: 15px; left: -10px; } /* Keep head upright relative to ground */
.stickman.laying .stickman-arm-left { transform: rotate(110deg) translateX(-4px); } /* Arm resting */
.stickman.laying .stickman-arm-right { transform: rotate(60deg) translateX(4px); } /* Other arm resting */
.stickman.laying .stickman-leg-left { transform: rotate(100deg) translateX(-2px); } /* Legs extended */
.stickman.laying .stickman-leg-right { transform: rotate(80deg) translateX(2px); }

.stickman.fighting .stickman-arm-left { animation: punch-left 0.3s infinite alternate; }
.stickman.fighting .stickman-arm-right { animation: punch-right 0.3s infinite alternate; }
@keyframes punch-left {
    from { transform: rotate(-90deg) translateX(-10px); }
    to { transform: rotate(-30deg) translateX(-4px); }
}
@keyframes punch-right {
    from { transform: rotate(90deg) translateX(10px); }
    to { transform: rotate(30deg) translateX(4px); }
}

.stickman.waving .stickman-arm-right { animation: wave 0.6s ease-in-out 3; /* Wave 3 times */ }
@keyframes wave {
    0%, 100% { transform: rotate(-30deg) translateX(4px); }
    50% { transform: rotate(-120deg) translateX(8px); } /* Higher wave */
}

.stickman.dancing { animation: dance-bounce 0.5s infinite ease-in-out; }
.stickman.dancing .stickman-arm-left { animation: dance-arm-l 1s infinite ease-in-out; }
.stickman.dancing .stickman-arm-right { animation: dance-arm-r 1s infinite ease-in-out; }
.stickman.dancing .stickman-leg-left { animation: dance-leg-l 0.5s infinite ease-in-out; }
.stickman.dancing .stickman-leg-right { animation: dance-leg-r 0.5s infinite ease-in-out; }
@keyframes dance-bounce { 50% { transform: translateY(-8px); } }
@keyframes dance-arm-l { 50% { transform: rotate(90deg) translateX(-4px); } }
@keyframes dance-arm-r { 50% { transform: rotate(-90deg) translateX(4px); } }
@keyframes dance-leg-l { 50% { transform: rotate(40deg) translateX(-2px); } }
@keyframes dance-leg-r { 50% { transform: rotate(-40deg) translateX(2px); } }

.stickman.thinking .stickman-head { animation: head-tilt 2s infinite ease-in-out; }
@keyframes head-tilt {
    0%, 100% { transform: rotate(0); }
    25% { transform: rotate(-15deg); }
    75% { transform: rotate(10deg); }
}
.stickman.thinking .stickman-arm-right { transform: rotate(-90deg) translateX(15px) translateY(5px); } /* Hand on chin pose */

.stickman.looking .stickman-head { animation: look-around 3s infinite ease-in-out; }
@keyframes look-around {
    0%, 100% { transform: translateX(0) rotateY(0); }
    25% { transform: translateX(-5px) rotateY(-30deg); } /* Look left */
    50% { transform: translateX(0) rotateY(0); } /* Look center */
    75% { transform: translateX(5px) rotateY(30deg); } /* Look right */
}

.stickman.sleeping { animation: sleep-pose 0.5s ease forwards; }
@keyframes sleep-pose {
    to { transform: translateY(30px) rotate(90deg); }
}
.stickman.sleeping .stickman-head { transform: rotate(-90deg); top: 15px; left: -10px; }
/* Zzz animation can be added via JS/pseudo-elements if desired */
.stickman.sleeping::after {
    content: 'Zzz';
    position: absolute;
    top: -10px;
    left: -10px;
    font-family: 'Press Start 2P', cursive;
    font-size: 0.8rem;
    color: #fff;
    opacity: 0;
    animation: sleep-zzz 2s infinite ease-out;
}
@keyframes sleep-zzz {
    0%, 100% { opacity: 0; transform: translate(0, 0); }
    50% { opacity: 1; transform: translate(10px, -10px); }
}


/* New Activity Styles */
.stickman.tripping { animation: trip 0.7s ease-out forwards; }
@keyframes trip { /* Stumble and fall */
    0% { transform: translateY(0) rotate(0deg); }
    30% { transform: translateY(-5px) rotate(15deg); } /* Stumble */
    60% { transform: translateY(10px) rotate(-20deg); } /* Losing balance */
    100% { transform: translateY(40px) rotate(80deg); } /* Fallen */
}
.stickman.tripping .stickman-arm-left { transform: rotate(120deg); } /* Arms flail */
.stickman.tripping .stickman-arm-right { transform: rotate(-50deg); }
.stickman.tripping .stickman-leg-left { transform: rotate(100deg); } /* Legs tangled */
.stickman.tripping .stickman-leg-right { transform: rotate(60deg); }

.stickman.pointing .stickman-arm-right { transform: rotate(-90deg) translateX(10px); } /* Point straight */
.stickman.pointing .stickman-head { transform: rotateY(30deg); } /* Turn head slightly */

.stickman.shrugging .stickman-arm-left { transform: rotate(60deg) translateX(-6px) translateY(-3px); } /* Raise shoulders/arms */
.stickman.shrugging .stickman-arm-right { transform: rotate(-60deg) translateX(6px) translateY(-3px); }
.stickman.shrugging .stickman-body { transform: translateY(2px); } /* Slight body lift */

.stickman.facepalming .stickman-head { transform: rotate(15deg); } /* Tilt head */
.stickman.facepalming .stickman-arm-right {
    transform: rotate(-110deg) translateX(15px) translateY(-5px); /* Bring hand to face */
    height: 20px; /* Slightly shorter arm for pose */
}

/* Error Notification */
.error-notification {
    position: fixed;
    top: 80px; /* Below nav */
    right: 20px;
    background: rgba(255, 0, 0, 0.85); /* More opaque */
    border: 2px solid #ff4d4d; /* Lighter red border */
    border-radius: 5px;
    padding: 1rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    opacity: 0;
    visibility: hidden; /* Use visibility */
    transition: opacity 0.3s ease, visibility 0s linear 0.3s, transform 0.3s ease;
    z-index: 2000;
    transform: translateX(100%); /* Slide in from right */
    box-shadow: 0 0 15px rgba(255, 0, 0, 0.5);
}

.error-notification.visible {
    opacity: 1;
    visibility: visible;
    transition-delay: 0s;
    transform: translateX(0); /* Slide in */
}

.error-message {
    font-family: 'Press Start 2P', cursive;
    font-size: 0.8rem;
    color: #fff;
    text-shadow: 0 0 5px rgba(0,0,0,0.5); /* Add shadow for readability */
}

.error-close {
    background: transparent;
    border: none;
    color: #fff;
    font-size: 1.2rem; /* Larger close button */
    cursor: pointer;
    text-shadow: 0 0 5px rgba(0,0,0,0.5);
    padding: 0.2rem;
    line-height: 1;
}

.error-close:hover {
    color: #ffcccc; /* Lighter red on hover */
}

/* Responsive Design */
@media (max-width: 768px) {
    body { /* Ensure body takes full height on mobile */
       min-height: 100vh;
    }

    .retro-nav ul {
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 0; /* Reduced padding */
    }

    .retro-nav li {
        margin: 0.5rem 0;
    }
    .retro-nav a {
        font-size: 0.9rem; /* Slightly smaller nav links */
    }

    section {
        padding: 5rem 1rem 2rem 1rem; /* Adjusted padding for mobile */
        min-height: auto; /* Allow sections to be shorter than viewport */
        /* Ensure content doesn't get cut off if screen is very short */
         height: auto;
    }
     section:last-child {
         padding-bottom: 4rem; /* Extra padding at the bottom */
     }


    .hero h1 { font-size: 2.5rem; }
    .hero h2 { font-size: 1.5rem; }

    .sound-wave-container { width: 200px; height: 80px; }
    .sound-bar { width: 8px; }

    .section-title { font-size: 1.8rem; margin-bottom: 2rem; }

    .mix-container { flex-direction: column; align-items: center; gap: 2rem;}
    .mix-grid { grid-template-columns: 1fr; flex: auto; width: 100%; max-width: 350px; /* Limit width on mobile */}
    .mix-description { text-align: center; flex: auto; max-width: 90%; } /* Center text */

    .artist-content { flex-direction: column; text-align: center; gap: 1.5rem; }
    .artist-bio { text-align: center; max-width: 90%; }
    .artist-content img { width: 200px; height: 200px; }

    .booking-form { padding: 0 1rem; max-width: 100%; }
    .form-flipper { min-height: auto; } /* Auto height */
    .form-front {
        grid-template-columns: 1fr; /* Single column on mobile */
        padding: 1.5rem;
    }
    .form-group { grid-column: 1 / -1 !important; } /* Force all to full width */
    .input-wrapper { height: 45px; } /* Slightly smaller inputs */
    .input-label { font-size: 0.9rem; }


    .retro-cube-container { bottom: 10px; left: 10px; transform: scale(0.9); /* Slightly smaller */}
    .retro-cube { width: 100px; height: 100px; }
    .cube-face { width: 100px; height: 100px; }
    .face-front { transform: translateZ(50px); }
    .face-back { transform: translateZ(-50px) rotateY(180deg); }
    .face-left { transform: translateX(-50px) rotateY(-90deg); }
    .face-right { transform: translateX(50px) rotateY(90deg); }
    .face-top { transform: translateY(-50px) rotateX(90deg); }
    .face-bottom { transform: translateY(50px) rotateX(-90deg); }
    .cube-text { font-size: 0.5rem; }
    .countdown-timer { font-size: 1rem; padding: 0.4rem 0.8rem; }
    .timer-digit { width: 15px; height: 25px; font-size: 0.8rem; line-height: 25px;}


    .stickman {
        width: 40px; height: 64px; /* Adjusted proportions */
        transform: scale(0.9); /* Make slightly smaller overall */
    }
    .stickman-head { width: 16px; height: 16px; left: 12px; }
    .stickman-body { height: 24px; top: 16px; left: 18px; }
    .stickman-arm-left, .stickman-arm-right,
    .stickman-leg-left, .stickman-leg-right { height: 20px; /* Shorter limbs */ }
    .stickman-arm-left { top: 20px; left: 18px; transform: rotate(30deg) translateX(-3px); }
    .stickman-arm-right { top: 20px; left: 18px; transform: rotate(-30deg) translateX(3px); }
    .stickman-leg-left { top: 40px; left: 18px; transform: rotate(15deg) translateX(-1px); }
    .stickman-leg-right { top: 40px; left: 18px; transform: rotate(-15deg) translateX(1px); }
    .stickman-speech-bubble { top: -35px; padding: 6px 10px; }
    .stickman-speech-text { font-size: 0.5rem; }
    /* Adjust laying position for mobile scale if needed */
    .stickman.laying { transform: translateY(20px) rotate(90deg) scale(0.9); }


    .error-notification { top: 65px; right: 10px; left: 10px; /* Span more width */ width: auto; }
}
